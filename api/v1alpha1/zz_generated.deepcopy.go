// +build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/api/core/v1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVC) DeepCopyInto(out *FluentPVC) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVC.
func (in *FluentPVC) DeepCopy() *FluentPVC {
	if in == nil {
		return nil
	}
	out := new(FluentPVC)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FluentPVC) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCBinding) DeepCopyInto(out *FluentPVCBinding) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	out.Spec = in.Spec
	in.Status.DeepCopyInto(&out.Status)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCBinding.
func (in *FluentPVCBinding) DeepCopy() *FluentPVCBinding {
	if in == nil {
		return nil
	}
	out := new(FluentPVCBinding)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FluentPVCBinding) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCBindingList) DeepCopyInto(out *FluentPVCBindingList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FluentPVCBinding, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCBindingList.
func (in *FluentPVCBindingList) DeepCopy() *FluentPVCBindingList {
	if in == nil {
		return nil
	}
	out := new(FluentPVCBindingList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FluentPVCBindingList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCBindingSpec) DeepCopyInto(out *FluentPVCBindingSpec) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCBindingSpec.
func (in *FluentPVCBindingSpec) DeepCopy() *FluentPVCBindingSpec {
	if in == nil {
		return nil
	}
	out := new(FluentPVCBindingSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCBindingStatus) DeepCopyInto(out *FluentPVCBindingStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCBindingStatus.
func (in *FluentPVCBindingStatus) DeepCopy() *FluentPVCBindingStatus {
	if in == nil {
		return nil
	}
	out := new(FluentPVCBindingStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCList) DeepCopyInto(out *FluentPVCList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]FluentPVC, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCList.
func (in *FluentPVCList) DeepCopy() *FluentPVCList {
	if in == nil {
		return nil
	}
	out := new(FluentPVCList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *FluentPVCList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCSpec) DeepCopyInto(out *FluentPVCSpec) {
	*out = *in
	in.PVCSpecTemplate.DeepCopyInto(&out.PVCSpecTemplate)
	if in.CommonEnv != nil {
		in, out := &in.CommonEnv, &out.CommonEnv
		*out = make([]v1.EnvVar, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	if in.SidecarContainersTemplate != nil {
		in, out := &in.SidecarContainersTemplate, &out.SidecarContainersTemplate
		*out = make([]v1.Container, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	in.PVCFinalizerJobSpecTemplate.DeepCopyInto(&out.PVCFinalizerJobSpecTemplate)
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCSpec.
func (in *FluentPVCSpec) DeepCopy() *FluentPVCSpec {
	if in == nil {
		return nil
	}
	out := new(FluentPVCSpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *FluentPVCStatus) DeepCopyInto(out *FluentPVCStatus) {
	*out = *in
	if in.Conditions != nil {
		in, out := &in.Conditions, &out.Conditions
		*out = make([]metav1.Condition, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new FluentPVCStatus.
func (in *FluentPVCStatus) DeepCopy() *FluentPVCStatus {
	if in == nil {
		return nil
	}
	out := new(FluentPVCStatus)
	in.DeepCopyInto(out)
	return out
}
